buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://jars.interlis.ch"
        }
        maven {
            url "http://download.osgeo.org/webdav/geotools/"
        }
        mavenCentral()
        jcenter()
    }
}

plugins {
  id "ch.so.agi.gretl" version "1.0.5-SNAPSHOT" // snapshot support needs gradle >= v4.10
}

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

ext {
    dbUriSogis = "jdbc:postgresql://geodb.verw.rootso.org:5432/sogis"
    dbUserSogis = "mspublic"
    dbPwdSogis = "mspublic"
    dbUriVagrant = "jdbc:postgresql://192.168.50.8/sogis"
    dbUserVagrant = "ddluser"
    dbPwdVagrant = "ddluser"
}

task importSchema(type: Ili2pgImportSchema) {
    description = "Erstellt das Datenbankschema mit den leeren Tabellen anhand eines INTERLIS-Modelles."
    database = [dbUriVagrant, dbUserVagrant, dbPwdVagrant]
    models = "SO_AGEM_Fila_20180820"
    modeldir = "http://models.geo.admin.ch;../" 
    dbschema = "agem_fila"
    nameByTopic = true
    createFk = true
    createFkIdx = true
    createUnique = true
    createNumChecks = true
    createEnumTabs = true
    strokeArcs = true
    logFile = "ili2pg_import_schema.log"
}

task transferTLMStrassen(type: Db2Db) {
    description = "Kopiert die Daten aus dem Original-TLM-Datensatz in das eigene Modell."
    sourceDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriVagrant, dbUserVagrant, dbPwdVagrant]
    transferSets = [
            new TransferSet('agem_fila_tlm_strassenachse.sql', 'agem_fila.tlm_strassenachse', true)
    ];
}


task exportTLMStrassen(type: Ili2pgExport) {
    description = "Export die Daten in eine INTERLIS-Transferdatei."
    database = [dbUriVagrant, dbUserVagrant, dbPwdVagrant]
    dbschema = "agem_fila"
    models = "SO_AGEM_Fila_20180820"
    modeldir = "http://models.geo.admin.ch;../" 
    dataFile = "tlm_strassen.xtf"
    logFile = "ili2pg_export.log"
}
